{"version":3,"file":"static/js/698.5ded5d6d.chunk.js","mappings":"qQAEA,IAAMA,EAAY,gCACZC,EAAM,mCAEL,SAASC,IACZ,OACIC,MAAM,GAAD,OAAIH,EAAJ,uCAA4CC,IAAOG,MAAK,SAAAC,GAErD,OAAOA,EAASC,UAOzB,SAASC,EAAkBC,GAC9B,OACIL,MAAM,GAAD,OAAIH,EAAJ,gCAAqCC,EAArC,kBAAkDO,IAAcJ,MAAK,SAAAC,GAElE,OAAOA,EAASC,UAMzB,SAASG,EAAkBC,GAC9B,OACIP,MAAM,GAAD,OAAIH,EAAJ,iBAAsBU,EAAtB,oBAA0CT,IAAOG,MAAK,SAAAC,GAEnD,OAAOA,EAASC,UAMzB,SAASK,EAAeD,GAC3B,OACIP,MAAM,GAAD,OAAIH,EAAJ,iBAAsBU,EAAtB,4BAAkDT,IAAOG,MAAK,SAAAC,GAC7D,OAAOA,EAASC,UAMvB,SAASM,EAAkBF,GAC9B,OAAOP,MAAM,GAAD,OACPH,EADO,iBACWU,EADX,4BACuCT,IAEhDG,MAAK,SAACC,GACL,OAAOA,EAASC,Y,yHCjDxB,EAA0B,kCAA1B,EAA0E,sCAA1E,EAAuH,+BAAvH,EAAiK,mCAAjK,EAA4M,gCAA5M,EAAwP,oCAAxP,EAAuS,mCAAvS,EAAuV,qC,SCIjVO,GAAYC,EAAAA,EAAAA,OAAK,kBAAM,4BACvBC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,gCAgE3B,EA7D0B,WAEtB,IAAIE,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACN,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KASA,OAPAC,EAAAA,EAAAA,YAAU,YACNd,EAAAA,EAAAA,IAAkBS,GAASd,MAAK,SAAAoB,GAC5BC,QAAQC,IAAIF,GACZF,EAAgBE,MACjBG,OAAM,SAAAC,GAAK,OAAIC,MAAMD,QACzB,CAACV,KAGA,iBAAKY,UAAYC,EAAjB,WAEI,mBAAQC,KAAK,SAASC,QAAS,WAAQjB,GAAU,IAAjD,qBAKIK,IACI,iCACI,iBAAKS,UAAYC,EAAjB,UACCV,EAAaa,aAAc,gBAAKC,IAAG,0CAAqCd,EAAaa,aAAeE,IAAKf,EAAagB,SAAY,gBAAMF,IAAKG,EAAKC,MAAM,MAAMH,IAAI,YAE/J,iBAAKN,UAAYC,EAAjB,WACI,gBAAID,UAAYC,EAAhB,cAA8BV,EAAagB,MAA3C,KAAoD,UAAGhB,EAAamB,cAAeC,MAAM,GAAG,GAA5F,SACJ,eAAGX,UAAYC,EAAf,0BAAyCV,EAAaqB,iBACtD,eAAIZ,UAAYC,EAAhB,uBACA,eAAGD,UAAYC,EAAf,cAA6BV,EAAasB,aAC1C,eAAIb,UAAYC,EAAhB,qBACI,eAAID,UAAYC,EAAhB,SACCV,EAAauB,QAAUvB,EAAauB,OAAOC,KAAI,SAAAC,GAAK,OAAI,gBAAmBhB,UAAYC,EAA/B,cAA8Ce,EAAMC,KAApD,MAASD,EAAME,gBAIhF,iBAAKlB,UAAYC,EAAjB,WACI,oDACA,SAAC,KAAD,CAASkB,GAAG,OAAOnB,UAAYC,EAA/B,mBAGA,SAAC,KAAD,CAASkB,GAAG,UAAUnB,UAAYC,EAAlC,4BAQhB,SAAC,EAAAmB,SAAD,CAAUC,UAAU,sCAApB,UACI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACxC,EAAD,OAC5B,SAAC,KAAD,CAAOuC,KAAK,UAAUC,SAAS,SAACtC,EAAD,gB","sources":["components/ApiService/ApiService.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.js"],"sourcesContent":["\n\nconst BASIC_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '80ee4206e07196c72de8abd9e50bf90a';\n\nexport function fetchTrendingMovies() {    \n    return (\n        fetch(`${BASIC_URL}trending/movie/week?api_key=${KEY}`).then(response => {                    \n                // console.log(response.json())                       \n                return response.json()                         \n            }\n        )\n    )\n};\n\n\nexport function fetchSearchMovies(queryValue) { \n    return (\n        fetch(`${BASIC_URL}search/movie?api_key=${KEY}&query=${queryValue}`).then(response => {                    \n                // console.log(response.json())                       \n                return response.json()                         \n            }\n        )\n    )\n};\n\nexport function fetchMovieDetails(movie_id) { \n    return (\n        fetch(`${BASIC_URL}movie/${movie_id}?api_key=${KEY}`).then(response => {                    \n                // console.log(response.json())                       \n                return response.json()                         \n            }\n        )\n    )\n};\n\nexport function fetchMovieCast(movie_id) { \n    return (\n        fetch(`${BASIC_URL}movie/${movie_id}/credits?api_key=${KEY}`).then(response => {                  \n              return response.json()                         \n            }\n        )\n    )\n};\n\nexport function fetchMovieReviews(movie_id) {\n    return fetch(\n      `${BASIC_URL}movie/${movie_id}/reviews?api_key=${KEY}`\n    )\n      .then((response) => {\n        return response.json();\n      })\n  }","// extracted by mini-css-extract-plugin\nexport default {\"details\":\"MovieDetailsPage_details__7aDRv\",\"detailsPage\":\"MovieDetailsPage_detailsPage__0Kn50\",\"info\":\"MovieDetailsPage_info__3IUJv\",\"filmInfo\":\"MovieDetailsPage_filmInfo__u1grk\",\"genre\":\"MovieDetailsPage_genre__zepMl\",\"genreList\":\"MovieDetailsPage_genreList__OPvFn\",\"infoList\":\"MovieDetailsPage_infoList__mBG4Y\",\"additional\":\"MovieDetailsPage_additional__BCHVj\"};","import { useEffect, useState, lazy, Suspense } from 'react';\nimport { NavLink, useNavigate, useParams, Routes, Route } from 'react-router-dom';\nimport { fetchMovieDetails } from '../ApiService/ApiService';\nimport img from '../Image/film-null.jpg';\nimport s from './MovieDetailsPage.module.css';\nconst MovieCast = lazy(() => import('../MovieCast/MovieCast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\n\nconst FetchMovieDetails = () => {\n\n    let navigate = useNavigate();\n    let { movieId } = useParams();\n    const [movieDetails, setMovieDetails] = useState(\"\");    \n\n    useEffect(() => {\n        fetchMovieDetails(movieId).then(movie => {\n            console.log(movie);\n            setMovieDetails(movie);\n        }).catch(error => alert(error));\n    }, [movieId]);\n\n    return (\n        <div className={ s.detailsPage}>\n\n            <button type=\"button\" onClick={() => { navigate(-1) }} >\n                Go back\n            </button>\n\n            {\n                movieDetails && (\n                    <>\n                        <div className={ s.details }>\n                        {movieDetails.poster_path ? <img src={`https://image.tmdb.org/t/p/w300/${movieDetails.poster_path}`} alt={movieDetails.title} /> : < img src={img} width=\"300\" alt='Poster' />}\n                        \n                            <div className={ s.info }>\n                                <h1 className={ s.filmInfo}> {movieDetails.title} ({`${movieDetails.release_date}`.slice(0,-6)}) </h1>\n                            <p className={ s.filmInfo}>User Score : {movieDetails.vote_average}</p>\n                            <h3 className={ s.filmInfo}>Overwiew</h3>\n                            <p className={ s.filmInfo}> {movieDetails.overview}</p>\n                            <h3 className={ s.filmInfo}>Genres</h3>\n                                <ul className={ s.genre}>\n                                {movieDetails.genres && movieDetails.genres.map(genre => <li key={genre.id} className={ s.genreList}> {genre.name} </li>)}\n                            </ul>\n                            </div>\n                        </div>    \n                        <div className={ s.additional }>\n                            <h3>Additional information</h3>\n                            <NavLink to=\"cast\" className={ s.infoList}>\n                                Cast\n                            </NavLink>\n                            <NavLink to=\"reviews\" className={ s.infoList}>\n                                Reviews\n                            </NavLink>\n                        </div>\n                    </>\n                )\n            }\n            \n            <Suspense fallback={<p>Loading...</p>}>\n                <Routes>\n                    <Route path=\"cast\" element={<MovieCast />} />\n                    <Route path=\"reviews\" element={<Reviews />} />\n                </Routes>\n            </Suspense>\n\n        </div>\n    )\n};\n\nexport default FetchMovieDetails;"],"names":["BASIC_URL","KEY","fetchTrendingMovies","fetch","then","response","json","fetchSearchMovies","queryValue","fetchMovieDetails","movie_id","fetchMovieCast","fetchMovieReviews","MovieCast","lazy","Reviews","navigate","useNavigate","movieId","useParams","useState","movieDetails","setMovieDetails","useEffect","movie","console","log","catch","error","alert","className","s","type","onClick","poster_path","src","alt","title","img","width","release_date","slice","vote_average","overview","genres","map","genre","name","id","to","Suspense","fallback","path","element"],"sourceRoot":""}