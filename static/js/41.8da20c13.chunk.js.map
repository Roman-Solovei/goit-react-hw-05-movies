{"version":3,"file":"static/js/41.8da20c13.chunk.js","mappings":"oQAEA,IAAMA,EAAY,gCACZC,EAAM,mCAEL,SAASC,IACZ,OACIC,MAAM,GAAD,OAAIH,EAAJ,uCAA4CC,IAAOG,MAAK,SAAAC,GACzD,OAAOA,EAASC,UAOrB,SAASC,EAAkBC,GAC9B,OACIL,MAAM,GAAD,OAAIH,EAAJ,gCAAqCC,EAArC,kBAAkDO,IAAcJ,MAAK,SAAAC,GACtE,OAAOA,EAASC,UAMrB,SAASG,EAAkBC,GAC9B,OACIP,MAAM,GAAD,OAAIH,EAAJ,iBAAsBU,EAAtB,oBAA0CT,IAAOG,MAAK,SAAAC,GAEvD,OAAOA,EAASC,UAMrB,SAASK,EAAeD,GAC3B,OACIP,MAAM,GAAD,OAAIH,EAAJ,iBAAsBU,EAAtB,4BAAkDT,IAAOG,MAAK,SAAAC,GAC7D,OAAOA,EAASC,UAMvB,SAASM,EAAkBF,GAC9B,OAAOP,MAAM,GAAD,OACPH,EADO,iBACWU,EADX,4BACuCT,IAEhDG,MAAK,SAACC,GACL,OAAOA,EAASC,Y,+GC/CxB,EAAyB,0BAAzB,EAA0D,wB,SCkE1D,EA1D0B,WACxB,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAOL,EAAP,KAAmBQ,EAAnB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MA+BjB,OA5BAC,EAAAA,EAAAA,YAAU,WAEJF,EAASG,SACXf,EAAAA,EAAAA,IAAkBY,EAASG,QACxBlB,MAAK,SAACU,GACLC,EAAUD,MACTS,OAAM,SAACC,GAAD,OAAWC,MAAMD,QAE7B,CAACL,EAASG,UAqBX,iBAAKI,UAAYC,EAAjB,WACE,kBAAMC,SAnBV,SAAkBC,GAChBA,EAAMC,iBACNf,EAAU,IACVC,EAAc,KAEdT,EAAAA,EAAAA,IAAkBC,EAAWuB,QAC1B3B,MAAK,SAACU,GACLC,EAAUD,MACTS,OAAM,SAACC,GAAD,OAAWC,MAAMD,MAE3BP,EAAS,CAACK,OAAO,UAAD,OAAYd,MAS3B,WACE,kBAAOwB,MAAOxB,EAAYyB,SAPhC,SAAsBJ,GACpBb,EAAca,EAAMK,OAAOF,WAOvB,8CAEF,eAAIN,UAAYC,EAAhB,SACGb,GACCA,EAAOqB,QAAQC,KAAI,SAACC,GAClB,OACE,SAAC,KAAD,CAEEC,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,KAH/B,UAIK,wBAAKH,EAAMI,SAHTJ,EAAMG","sources":["components/ApiService/ApiService.js","webpack://goit-react-hw-05-movies/./src/components/MoviesPage/MoviePage.module.css?9658","components/MoviesPage/MoviesPage.js"],"sourcesContent":["\n\nconst BASIC_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '80ee4206e07196c72de8abd9e50bf90a';\n\nexport function fetchTrendingMovies() {    \n    return (\n        fetch(`${BASIC_URL}trending/movie/week?api_key=${KEY}`).then(response => {\n            return response.json()                         \n            }\n        )\n    )\n};\n\n\nexport function fetchSearchMovies(queryValue) { \n    return (\n        fetch(`${BASIC_URL}search/movie?api_key=${KEY}&query=${queryValue}`).then(response => {\n            return response.json()                         \n            }\n        )\n    )\n};\n\nexport function fetchMovieDetails(movie_id) { \n    return (\n        fetch(`${BASIC_URL}movie/${movie_id}?api_key=${KEY}`).then(response =>\n            {\n            return response.json()                         \n            }\n        )\n    )\n};\n\nexport function fetchMovieCast(movie_id) { \n    return (\n        fetch(`${BASIC_URL}movie/${movie_id}/credits?api_key=${KEY}`).then(response => {                  \n              return response.json()                         \n            }\n        )\n    )\n};\n\nexport function fetchMovieReviews(movie_id) {\n    return fetch(\n      `${BASIC_URL}movie/${movie_id}/reviews?api_key=${KEY}`\n        )\n      .then((response) => {\n        return response.json();\n      }\n    )\n};","// extracted by mini-css-extract-plugin\nexport default {\"search\":\"MoviePage_search__GP5IM\",\"list\":\"MoviePage_list__TbYA5\"};","import { useEffect, useState } from 'react';\n// import { NavLink, useParams } from 'react-router-dom';\nimport { useLocation, useNavigate, NavLink } from 'react-router-dom';\n// import  {createBrowserHistory}  from 'history';\nimport { fetchSearchMovies } from '../ApiService/ApiService';\nimport s from './MoviePage.module.css';\n\n\n\nconst FetchSearchMovies = () => {\n  const [movies, setMovies] = useState(\"\");\n  const [queryValue, setQueryValue] = useState(\"\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  // const history = createBrowserHistory();\n    \n  useEffect(() => {\n    // console.log(location.search)\n    if (location.search) {\n      fetchSearchMovies(location.search)\n        .then((movies) => {\n          setMovies(movies)\n        }).catch((error) => alert(error))\n      }\n  }, [location.search]);\n \n\n  function onSubmit(event) {\n    event.preventDefault();\n    setMovies(\"\"); \n    setQueryValue(\"\");\n        \n    fetchSearchMovies(queryValue.trim())\n      .then((movies) => {\n        setMovies(movies);\n      }).catch((error) => alert(error))\n    \n     navigate({search: `&query=${queryValue}` });\n  };\n\n  function handleChange(event) {  \n    setQueryValue(event.target.value)        \n  };\n\n  return (\n    <div className={ s.search }>\n      <form onSubmit={onSubmit}>\n        <input value={queryValue} onChange={handleChange} />\n        <button>Search...</button>\n      </form>\n      <ul className={ s.list }>\n        {movies &&\n          movies.results.map((movie) => {\n            return (\n              <NavLink\n                key={movie.id}\n                to={{\n                  pathname: `/movies/${movie.id}`\n                }}><li>{movie.title}</li>\n              </NavLink>\n            );\n          })}\n      </ul>\n    </div>\n  );   \n};\n\nexport default FetchSearchMovies;"],"names":["BASIC_URL","KEY","fetchTrendingMovies","fetch","then","response","json","fetchSearchMovies","queryValue","fetchMovieDetails","movie_id","fetchMovieCast","fetchMovieReviews","useState","movies","setMovies","setQueryValue","navigate","useNavigate","location","useLocation","useEffect","search","catch","error","alert","className","s","onSubmit","event","preventDefault","trim","value","onChange","target","results","map","movie","to","pathname","id","title"],"sourceRoot":""}